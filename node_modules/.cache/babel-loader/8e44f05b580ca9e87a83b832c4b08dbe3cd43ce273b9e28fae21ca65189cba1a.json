{"ast":null,"code":"var _jsxFileName = \"D:\\\\codar\\\\advice-generator-react\\\\src\\\\componentes\\\\advice\\\\Advice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport deskDivider from '../../assets/images/pattern-divider-desktop.svg';\nimport mobileDivider from '../../assets/images/pattern-divider-mobile.svg';\nimport iconDice from '../../assets/images/icon-dice.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Advice(props) {\n  _s();\n  const {\n    data,\n    randomAdvice,\n    isPending,\n    setIsPending\n  } = props;\n  const [adviceData, setAdviceData] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [windowWidth, setWindowWidth] = useState();\n  useEffect(() => {\n    randomAdvice();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      setIsPending(false);\n      setAdviceData(data.slip ? data.slip : data.slips[index]);\n      setIndex(0);\n    }\n    window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\n    return () => window.removeEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\n  }, [data]);\n  const handleClick = () => {\n    setIsPending(true);\n    randomAdvice();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"advice\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), !isPending && data.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Advice, \"7S4h0ut3tj33mXVN/eUcA1BryhQ=\");\n_c = Advice;\nvar _c;\n$RefreshReg$(_c, \"Advice\");","map":{"version":3,"names":["React","useEffect","useState","deskDivider","mobileDivider","iconDice","jsxDEV","_jsxDEV","Advice","props","_s","data","randomAdvice","isPending","setIsPending","adviceData","setAdviceData","index","setIndex","windowWidth","setWindowWidth","slip","slips","window","addEventListener","innerWidth","removeEventListener","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","text","_c","$RefreshReg$"],"sources":["D:/codar/advice-generator-react/src/componentes/advice/Advice.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport deskDivider from '../../assets/images/pattern-divider-desktop.svg'\r\nimport mobileDivider from '../../assets/images/pattern-divider-mobile.svg'\r\nimport iconDice from '../../assets/images/icon-dice.svg'\r\n\r\nexport default function Advice(props) {\r\n  const {data, randomAdvice, isPending, setIsPending} = props;\r\n  const [adviceData, setAdviceData] = useState(null);\r\n  const [index, setIndex] = useState(0);\r\n  const [windowWidth, setWindowWidth] = useState();\r\n\r\n\r\n  useEffect(()=>{\r\n    randomAdvice();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsPending(false);\r\n      setAdviceData(data.slip ? data.slip : data.slips[index]);\r\n      setIndex(0)\r\n    }\r\n\r\n    window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\r\n\r\n    return () => window.removeEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\r\n\r\n\r\n  }, [data]);\r\n\r\n  const handleClick = () => {\r\n    setIsPending(true);\r\n    randomAdvice();\r\n  }\r\n\r\n  return (\r\n    <div className=\"advice\">\r\n      {isPending && <div>Loading...</div>}\r\n\r\n\r\n      {!isPending && data.message && <div>\r\n        <h2>{data.message.text}</h2>  \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,aAAa,MAAM,gDAAgD;AAC1E,OAAOC,QAAQ,MAAM,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM;IAACC,IAAI;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAGL,KAAK;EAC3D,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,EAAE;EAGhDD,SAAS,CAAC,MAAI;IACZW,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI,EAAE;MACRG,YAAY,CAAC,KAAK,CAAC;MACnBE,aAAa,CAACL,IAAI,CAACU,IAAI,GAAGV,IAAI,CAACU,IAAI,GAAGV,IAAI,CAACW,KAAK,CAACL,KAAK,CAAC,CAAC;MACxDC,QAAQ,CAAC,CAAC,CAAC;IACb;IAEAK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAMJ,cAAc,CAACG,MAAM,CAACE,UAAU,CAAC,CAAC;IAE1E,OAAO,MAAMF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,MAAMN,cAAc,CAACG,MAAM,CAACE,UAAU,CAAC,CAAC;EAG5F,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBb,YAAY,CAAC,IAAI,CAAC;IAClBF,YAAY,EAAE;EAChB,CAAC;EAED,oBACEL,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,GACpBhB,SAAS,iBAAIN,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAGlC,CAACpB,SAAS,IAAIF,IAAI,CAACuB,OAAO,iBAAI3B,OAAA;MAAAsB,QAAA,eAC7BtB,OAAA;QAAAsB,QAAA,EAAKlB,IAAI,CAACuB,OAAO,CAACC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACvB,EAAA,CAxCuBF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}