{"ast":null,"code":"import _regeneratorRuntime from\"/workspaces/advice-generator-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/workspaces/advice-generator-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/workspaces/advice-generator-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SearchContainer(props){var setData=props.setData,setIsPending=props.setIsPending;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var _useState3=useState(\"id\"),_useState4=_slicedToArray(_useState3,2),searchType=_useState4[0],setSearchType=_useState4[1];function handleSearchInput(event){setSearchValue(event.target.value);}function handleSearchType(event){setSearchType(event.target.value);}function searchAdvice(){return _searchAdvice.apply(this,arguments);}function _searchAdvice(){_searchAdvice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,advice;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setIsPending(true);if(!(searchType===\"id\")){_context.next=9;break;}_context.next=4;return fetch('https://api.adviceslip.com/advice/'+searchValue);case 4:response=_context.sent;_context.next=7;return response.json();case 7:advice=_context.sent;setData(advice);case 9:case\"end\":return _context.stop();}},_callee);}));return _searchAdvice.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"search-input\",placeholder:\"Search...\",value:searchValue,onChange:handleSearchInput,pattern:searchType===\"id\"?\"[0-9]*\":\"[A-Za-z]*\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"search-type\",value:searchType,onChange:handleSearchType,children:[/*#__PURE__*/_jsx(\"option\",{value:\"id\",children:\"ID\"}),/*#__PURE__*/_jsx(\"option\",{value:\"word\",children:\"Word\"})]}),/*#__PURE__*/_jsx(\"button\",{id:\"search-button\",onClick:searchAdvice,children:\"Search\"})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SearchContainer","props","setData","setIsPending","_useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","_useState4","searchType","setSearchType","handleSearchInput","event","target","value","handleSearchType","searchAdvice","_searchAdvice","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","advice","wrap","_callee$","_context","prev","next","fetch","sent","json","stop","className","children","type","id","placeholder","onChange","pattern","onClick"],"sources":["/workspaces/advice-generator-react/src/componentes/search/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function SearchContainer(props) {\n  const {setData, setIsPending} = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"id\");\n\n  function handleSearchInput(event) {\n    setSearchValue(event.target.value);\n  }\n\n  function handleSearchType(event) {\n    setSearchType(event.target.value);\n  }\n\n  async function searchAdvice() {\n    setIsPending(true);\n\n    if (searchType === \"id\") {\n      const response = await fetch('https://api.adviceslip.com/advice/'+searchValue);\n      const advice = await response.json();\n      setData(advice);\n    }\n\n  }\n\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        id=\"search-input\"\n        placeholder=\"Search...\"\n        value={searchValue}\n        onChange={handleSearchInput}\n        pattern={searchType === \"id\" ? \"[0-9]*\" : \"[A-Za-z]*\"}\n      />\n      <select id=\"search-type\" value={searchType} onChange={handleSearchType}>\n        <option value=\"id\">ID</option>\n        <option value=\"word\">Word</option>\n      </select>\n      <button id=\"search-button\" onClick={searchAdvice}>\n        Search\n      </button>\n    </div>\n  );\n}\n\n\n"],"mappings":"wXAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,cAAe,SAAS,CAAAC,eAAeA,CAACC,KAAK,CAAE,CAC7C,GAAO,CAAAC,OAAO,CAAkBD,KAAK,CAA9BC,OAAO,CAAEC,YAAY,CAAIF,KAAK,CAArBE,YAAY,CAC5B,IAAAC,SAAA,CAAsCT,QAAQ,CAAC,EAAE,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAAoCd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,QAAS,CAAAG,iBAAiBA,CAACC,KAAK,CAAE,CAChCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACpC,CAEA,QAAS,CAAAC,gBAAgBA,CAACH,KAAK,CAAE,CAC/BF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,CAAC,QAEc,CAAAE,YAAYA,CAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA3B,SAAAC,QAAA,MAAAC,QAAA,CAAAC,MAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACE7B,YAAY,CAAC,IAAI,CAAC,CAAC,KAEfQ,UAAU,GAAK,IAAI,GAAAmB,QAAA,CAAAE,IAAA,UAAAF,QAAA,CAAAE,IAAA,SACE,CAAAC,KAAK,CAAC,oCAAoC,CAAC1B,WAAW,CAAC,QAAxEmB,QAAQ,CAAAI,QAAA,CAAAI,IAAA,CAAAJ,QAAA,CAAAE,IAAA,SACO,CAAAN,QAAQ,CAACS,IAAI,EAAE,QAA9BR,MAAM,CAAAG,QAAA,CAAAI,IAAA,CACZhC,OAAO,CAACyB,MAAM,CAAC,CAAC,wBAAAG,QAAA,CAAAM,IAAA,MAAAX,OAAA,GAGnB,UAAAN,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,mBACEtB,KAAA,QAAKsC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BzC,IAAA,UACE0C,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,cAAc,CACjBC,WAAW,CAAC,WAAW,CACvBzB,KAAK,CAAET,WAAY,CACnBmC,QAAQ,CAAE7B,iBAAkB,CAC5B8B,OAAO,CAAEhC,UAAU,GAAK,IAAI,CAAG,QAAQ,CAAG,WAAY,EACtD,cACFZ,KAAA,WAAQyC,EAAE,CAAC,aAAa,CAACxB,KAAK,CAAEL,UAAW,CAAC+B,QAAQ,CAAEzB,gBAAiB,CAAAqB,QAAA,eACrEzC,IAAA,WAAQmB,KAAK,CAAC,IAAI,CAAAsB,QAAA,CAAC,IAAE,EAAS,cAC9BzC,IAAA,WAAQmB,KAAK,CAAC,MAAM,CAAAsB,QAAA,CAAC,MAAI,EAAS,GAC3B,cACTzC,IAAA,WAAQ2C,EAAE,CAAC,eAAe,CAACI,OAAO,CAAE1B,YAAa,CAAAoB,QAAA,CAAC,QAElD,EAAS,GACL,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}