{"ast":null,"code":"var _jsxFileName = \"D:\\\\codar\\\\advice-generator-react\\\\src\\\\componentes\\\\advice\\\\Advice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport deskDivider from '../../assets/images/pattern-divider-desktop.svg';\nimport iconDice from '../../assets/images/icon-dice.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Advice(props) {\n  _s();\n  const {\n    data,\n    randomAdvice,\n    isPending,\n    setIsPending\n  } = props;\n  const [adviceData, setAdviceData] = useState(null);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    randomAdvice();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      setIsPending(false);\n    }\n    setAdviceData(data.slip ? data.slip : data.slips[0]);\n  }, [data]);\n  const handleClick = () => {\n    setIsPending(true);\n    randomAdvice();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"advice\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this), !isPending && data.slip && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"advice-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Advice #\", data.slip.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"advice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.slip.advice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"advice-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deskDivider,\n          alt: \"pattern divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"advice-dice\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconDice,\n          alt: \"dice icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this), !isPending && data.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Advice, \"lf2hk7bTbzmVzBnrdrQUiYwbP70=\");\n_c = Advice;\nvar _c;\n$RefreshReg$(_c, \"Advice\");","map":{"version":3,"names":["React","useEffect","useState","deskDivider","iconDice","jsxDEV","_jsxDEV","Advice","props","_s","data","randomAdvice","isPending","setIsPending","adviceData","setAdviceData","index","setIndex","slip","slips","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","advice","src","alt","onClick","message","text","_c","$RefreshReg$"],"sources":["D:/codar/advice-generator-react/src/componentes/advice/Advice.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport deskDivider from '../../assets/images/pattern-divider-desktop.svg'\r\nimport iconDice from '../../assets/images/icon-dice.svg'\r\n\r\nexport default function Advice(props) {\r\n  const {data, randomAdvice, isPending, setIsPending} = props;\r\n  const [adviceData, setAdviceData] = useState(null);\r\n  const [index, setIndex] = useState(0); \r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n    randomAdvice();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsPending(false);\r\n    }\r\n\r\n    setAdviceData(data.slip ? data.slip : data.slips[0]);\r\n\r\n  }, [data]);\r\n\r\n  const handleClick = () => {\r\n    setIsPending(true);\r\n    randomAdvice();\r\n  }\r\n\r\n  return (\r\n    <div className=\"advice\">\r\n      {isPending && <div>Loading...</div>}\r\n      {!isPending && data.slip && <div>\r\n        <div className=\"advice-header\">\r\n          <h1>Advice #{data.slip.id}</h1>\r\n        </div>\r\n        <div className=\"advice-content\">\r\n          <p>{data.slip.advice}</p>\r\n        </div>\r\n        <div className=\"advice-divider\">\r\n          <img src={deskDivider} alt=\"pattern divider\" />\r\n        </div>\r\n        <div className=\"advice-dice\" onClick={handleClick}>\r\n          <img src={iconDice} alt=\"dice icon\" />\r\n        </div>\r\n            \r\n      </div>}\r\n      {!isPending && data.message && <div>\r\n        <h2>{data.message.text}</h2>  \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}